name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ----------------------
  # Build Job
  # ----------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install || echo "No dependencies"
      - name: Build placeholder
        run: echo "‚úÖ Build completed"

  # ----------------------
  # 4Ô∏è‚É£ Intelligent Test Triggers
  # ----------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm install || echo "No dependencies"

      # Run unit tests only if commit message has [unit]
      - name: Run Unit Tests
        if: contains(github.event.head_commit.message, '[unit]')
        run: npm run test:unit

      # Run integration tests only if commit message has [integration]
      - name: Run Integration Tests
        if: contains(github.event.head_commit.message, '[integration]')
        run: npm run test:integration

      # Run full test suite otherwise
      - name: Run Full Test Suite
        if: ${{ !contains(github.event.head_commit.message, '[unit]') && !contains(github.event.head_commit.message, '[integration]') }}
        run: npm test

  # ----------------------
  # 5Ô∏è‚É£ Deployment Triggers
  # ----------------------
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: production
      url: https://myapp.com
    steps:
      - name: Deploy placeholder
        run: echo "üöÄ Deploying to production..."
  
  # ----------------------
  # 6Ô∏è‚É£ Monitoring & Optimization
  # ----------------------
  optimize:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install || echo "No dependencies"
      - name: Optimization summary
        run: echo "‚úÖ Caching and monitoring in place"
